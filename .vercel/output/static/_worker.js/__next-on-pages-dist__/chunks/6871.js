var S=(y,p,l)=>{"use strict";function r(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);e!=null&&this.setState(e)}function s(e){this.setState(function(t){var n=this.constructor.getDerivedStateFromProps(e,t);return n??null}.bind(this))}function a(e,t){try{var n=this.props,o=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,o)}finally{this.props=n,this.state=o}}function c(e){var t=e.prototype;if(!t||!t.isReactComponent)throw Error("Can only polyfill class components");if(typeof e.getDerivedStateFromProps!="function"&&typeof t.getSnapshotBeforeUpdate!="function")return e;var n=null,o=null,i=null;if(typeof t.componentWillMount=="function"?n="componentWillMount":typeof t.UNSAFE_componentWillMount=="function"&&(n="UNSAFE_componentWillMount"),typeof t.componentWillReceiveProps=="function"?o="componentWillReceiveProps":typeof t.UNSAFE_componentWillReceiveProps=="function"&&(o="UNSAFE_componentWillReceiveProps"),typeof t.componentWillUpdate=="function"?i="componentWillUpdate":typeof t.UNSAFE_componentWillUpdate=="function"&&(i="UNSAFE_componentWillUpdate"),n!==null||o!==null||i!==null)throw Error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

`+(e.displayName||e.name)+" uses "+(typeof e.getDerivedStateFromProps=="function"?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()")+" but also contains the following legacy lifecycles:"+(n!==null?`
  `+n:"")+(o!==null?`
  `+o:"")+(i!==null?`
  `+i:"")+`

The above lifecycles should be removed. Learn more about this warning here:
https://fb.me/react-async-component-lifecycle-hooks`);if(typeof e.getDerivedStateFromProps=="function"&&(t.componentWillMount=r,t.componentWillReceiveProps=s),typeof t.getSnapshotBeforeUpdate=="function"){if(typeof t.componentDidUpdate!="function")throw Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=a;var f=t.componentDidUpdate;t.componentDidUpdate=function(u,h,m){var d=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:m;f.call(this,u,h,d)}}return e}l.r(p),l.d(p,{polyfill:()=>c}),r.__suppressDeprecationWarning=!0,s.__suppressDeprecationWarning=!0,a.__suppressDeprecationWarning=!0};export{S as default};
