var p=(h,i,o)=>{"use strict";o.d(i,{Z:()=>e});class e{constructor(t,{contentType:n}={}){this._result=t,this._contentType=n}contentType(){return this._contentType}toUnchunkedString(){if(typeof this._result!="string")throw Error("invariant: dynamic responses cannot be unchunked. This is a bug in Next.js");return this._result}pipe(t){if(typeof this._result=="string")throw Error("invariant: static responses cannot be piped. This is a bug in Next.js");let n=this._result,a=typeof t.flush=="function"?()=>t.flush():()=>{};return(async()=>{let u=n.getReader(),s=!1;try{for(;;){let{done:r,value:c}=await u.read();if(r){t.end();return}s=!0,t.write(c),a()}}catch(r){throw s&&t.destroy(r),r}})()}isDynamic(){return typeof this._result!="string"}static fromStatic(t){return new e(t)}static empty=e.fromStatic("")}};export{p as default};
